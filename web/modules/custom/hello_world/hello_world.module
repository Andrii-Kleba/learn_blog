<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function hello_world_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hello_world':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is an example module.') . '</p>';
      return $output;
    default:
  }
}

/**
 * Implements hook_mail().
 */
function hello_world_mail($key, &$message, $params) {
  switch ($key) {
    case 'hello_world_log':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = t('There is an error on your website');
      $message['body'][] = $params['message'];
      $user_message = 'The user that was logged in: [current-user:name]';
      $message['body'][] = \Drupal::token()
        ->replace($user_message, ['current-user' => \Drupal::currentUser()]);

      break;
  }
}

/**
 * Implements hook_mail_alter().
 */
function hello_world_mail_alter(&$message) {
  switch ($message['key']) {
    case 'hello-world_log':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes;';
      break;
  }
}

/**
 * Implements hook_token_info().
 */
function hello_world_token_info() {
  $type = [
    'name' => t('Salutation'),
    'description' => t('Tokens related to the hello World'),
  ];

  $tokens['salutation'] = [
    'name' => t('Salutation'),
    'description' => t('The Hello World salutation'),
  ];

  return [
    'types' => ['hello_world' => $type],
    'tokens' => ['hello_world' => $tokens],
  ];
}

/**
 * Implements hook_tokens().
 */
function hello_world_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type == 'hello_world') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'salutation':
          $replacements[$original] = \Drupal::service('hello_world.salutation')
            ->getSalutation();
          $config = \Drupal::config('hello_world.custom_salutation');
          $bubbleable_metadata->addCacheableDependency($config);
          break;
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_theme().
 */
function hello_world_theme($existing, $type, $theme, $path) {
  return [
    'hello_world_first' => [
      'variables' => [],
    ],
    'hello_world_second' => [
      'variables' => [
        'list_type' => 'ul',
        'items' => [],
      ],
      'file' => 'hello_world.theme.inc',
    ],
    'hello_world_quote' => [
      'variables' => [
        'quote' => NULL,
        'author' => NULL,
        'year' => NULL,
        'source_title' => NULL,
        'source_url' => NULL,
      ],
      'file' => 'hello_world.theme.inc',
      'pattern' => 'hello_world_quote__',
    ],
    'contact_message_feedback_form' => [
      'render element' => 'form',
      'file' => 'hello_world.theme.inc',
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK() for hello_world_first.
 */
function template_preprocess_hello_world_first(&$variables) {
  $time = \Drupal::time()->getRequestTime();
  /** @var \Drupal\Core\Datetime\DateFormatter $date_formatter */
  $date_formatter = \Drupal::service('date.formatter');
  $variables['date'] = $date_formatter->format($time);
}
